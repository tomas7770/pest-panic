-- title:   game title
-- author:  game developer, email, etc.
-- desc:    short description
-- site:    website link
-- license: MIT License (change this to your license of choice)
-- version: 0.1
-- script:  lua

function BOOT()
	DT = 1/60
	t = 0
	gameSpeed = 1
	score = 0
	lives = 3
	speedTable = {
		-- Map score to gameSpeed
		[25] = 1.1,
		[50] = 1.2,
		[75] = 1.3,
		[100] = 1,
		[115] = 1.1,
		[135] = 1.2,
		[160] = 1.3,
		[185] = 1.35,
		[200] = 1.1,
		[215] = 1.2,
		[235] = 1.3,
		[260] = 1.4,
		[285] = 1.5,
		[300] = 1.15,
		[310] = 1.2,
		[330] = 1.3,
		[350] = 1.45,
		[375] = 1.6,
		[400] = 1.2,
		[410] = 1.3,
		[430] = 1.4,
		[450] = 1.55,
		[475] = 1.7,
	}
	plrMoveAnim = {
		x = {
			-- Sum must be 24
			3,
			3,
			3,
			3,

			3,
			3,
			3,
			3,
		},
		y = {
			-- Sum must be 0
			-3,
			-3,
			-3,
			-3,

			3,
			3,
			3,
			3,
		},
	}
	plrClimbAnim = {
		-- Sum must be 24
		4,
		4,
		4,
		4,

		4,
		4,
		0,
		0,
	}
	plrDropAnim = {
		-- Sum must be 24
		-3,
		-2,
		-1,

		3,
		6,
		9,
		12,
	}
	plr = {
		x = 0,
		y = 0,
		gx = 2,
		gy = 4,
		moveDir = 1,
		moveAnimTimer = 0,
		moveAnimTimerMax = 0.03,
		moveAnimIndex = 0,
		climbDir = 1,
		climbAnimIndex = 0,
		cutTimer = 0,
		cutTimerMax = 0.75,
		cuttingWeed = nil,
		moving = function(self)
			return self.moveAnimIndex ~= 0
		end,
		climbing = function(self)
			return self.climbAnimIndex ~= 0
		end,
		cutting = function(self)
			return self.cutTimer > 0
		end,
		busy = function(self)
			return self:moving() or self:climbing() or self:cutting()
		end,
		canMoveLeft = function(self)
			if self.gy == 4 then
				return self.gx > 1
			else
				return self.gx > 4
			end
		end,
		canMoveRight = function(self)
			return self.gx < 8
		end,
	}
	plr.x, plr.y = addSprOffset(gameTilePos(plr.gx, plr.gy))
	scissorX, scissorY = addSprOffset(gameTilePos(1, 4))
	scissorUsesMax = 20
	scissorUsesLow = 4
	scissorUses = 0
	weedSprs = {
		261, 264, 267, 309
	}
	weedTimerMax = 16
	weeds = {
		{
			gx = 5,
			gy = 2,
			state = 0,
		},
		{
			gx = 6,
			gy = 2,
			state = 0,
		},
		{
			gx = 7,
			gy = 2,
			state = 0,
		},
		{
			gx = 5,
			gy = 3,
			state = 0,
		},
		{
			gx = 6,
			gy = 3,
			state = 0,
		},
		{
			gx = 7,
			gy = 3,
			state = 0,
		},
	}
	for _,wd in ipairs(weeds) do
		wd.x, wd.y = gameTilePos(wd.gx, wd.gy)
		wd.resetTimer = function()
			wd.timer = weedTimerMax*randLimited()
		end
		wd.resetTimer()
	end
	failAnimTimerMax = 3
	failAnimTimer = 0
	failWeed = nil
end

function gameTilePos(x,y)
	-- 10x5(.5)
	return x*24, y*24
end

function addSprOffset(x,y)
	-- Draw 16x16 centered on 24x24
	return x+4, y+4
end

function randLimited()
	-- 0.25 to 1.0
	return 0.75*math.random()+0.25
end

function lerp(a, b, t)
	return a*(1-t) + b*t
end

function updateGameSpeed()
	if speedTable[score] then
		gameSpeed = speedTable[score]
	end
end

function doFail()
	failAnimTimer = failAnimTimerMax
end

function loseLife()
	for _,wd in ipairs(weeds) do
		wd.state = 0
		wd.resetTimer()
	end
	lives = lives-1
end

function normalGameUpdate()
	if not plr:busy() then
		if btn(2) and plr:canMoveLeft() then
			plr.gx = plr.gx-1
	
			plr.moveDir = -1
			plr.moveAnimTimer = plr.moveAnimTimerMax
			plr.moveAnimIndex = 1
		elseif btn(3) and plr:canMoveRight() then
			plr.gx = plr.gx+1
	
			plr.moveDir = 1
			plr.moveAnimTimer = plr.moveAnimTimerMax
			plr.moveAnimIndex = 1
		elseif plr.gx == 4 or plr.gx == 8 then
			if btn(0) and plr.gy > 2 then
				plr.gy = plr.gy-1

				plr.climbDir = -1
				plr.moveAnimTimer = plr.moveAnimTimerMax
				plr.climbAnimIndex = 1
			elseif btn(1) and plr.gy < 4 then
				plr.gy = plr.gy+1

				plr.climbDir = 1
				plr.moveAnimTimer = plr.moveAnimTimerMax
				plr.climbAnimIndex = 1
			end
		elseif plr.gx > 4 and plr.gx < 8 and btn(1) and plr.gy < 4 then
			-- Drop down
			plr.gy = plr.gy+1

			plr.climbDir = 0
			plr.moveAnimTimer = plr.moveAnimTimerMax
			plr.climbAnimIndex = 1
		end
	end
	if plr.moveAnimIndex ~= 0 then
		plr.moveAnimTimer = plr.moveAnimTimer-DT*gameSpeed
		while plr.moveAnimTimer < 0 do
			plr.x = plr.x+plrMoveAnim.x[plr.moveAnimIndex]*plr.moveDir
			plr.y = plr.y+plrMoveAnim.y[plr.moveAnimIndex]
			if plr.moveAnimIndex == #plrMoveAnim.x then
				plr.moveAnimIndex = 0
				break
			end
			plr.moveAnimIndex = plr.moveAnimIndex+1
			plr.moveAnimTimer = plr.moveAnimTimer + plr.moveAnimTimerMax
		end
	elseif plr.climbAnimIndex ~= 0 then
		plr.moveAnimTimer = plr.moveAnimTimer-DT*gameSpeed
		while plr.moveAnimTimer < 0 do
			local animTable
			if plr.climbDir == 0 then
				animTable = plrDropAnim
				plr.y = plr.y+animTable[plr.climbAnimIndex]
			else
				animTable = plrClimbAnim
				plr.y = plr.y+animTable[plr.climbAnimIndex]*plr.climbDir
			end
			if plr.climbAnimIndex == #animTable then
				plr.climbAnimIndex = 0
				break
			end
			plr.climbAnimIndex = plr.climbAnimIndex+1
			plr.moveAnimTimer = plr.moveAnimTimer + plr.moveAnimTimerMax
		end
	end

	if plr.gx == 1 and scissorUses <= 0 and not plr:busy() then
		scissorUses = scissorUsesMax
	end

	for _,wd in ipairs(weeds) do
		if btn(4) and wd.state > 0 and plr.gx == wd.gx and plr.gy == wd.gy
			and scissorUses > 0 and not plr:busy() then
			
			plr.cutTimer = plr.cutTimerMax
			plr.cuttingWeed = wd
		elseif plr.cuttingWeed ~= wd then
			wd.timer = wd.timer-DT*gameSpeed
			if wd.timer <= 0 then
				wd.state = wd.state+1
				if wd.state > 4 then
					wd.state = 4
					failWeed = wd
					doFail()
					break
				end
				wd.resetTimer()
			end
		end
	end

	if plr.cutTimer > 0 then
		if not btn(4) then
			plr.cutTimer = 0
			plr.cuttingWeed = nil
		else
			plr.cutTimer = plr.cutTimer-DT*gameSpeed
			if plr.cutTimer <= 0 then
				scissorUses = scissorUses-1
				score = score+1
				updateGameSpeed()
				plr.cuttingWeed.state = plr.cuttingWeed.state-1
				plr.cuttingWeed.resetTimer()
				plr.cuttingWeed = nil
			end
		end
	end
end

function failGameUpdate()
	failAnimTimer = failAnimTimer-DT
	if failAnimTimer <= 0 then
		loseLife()
	end
end

function TIC()
	t = t+1
	if failAnimTimer <= 0 then
		normalGameUpdate()
	else
		failGameUpdate()
	end

	cls(0)
	map(0,0,30,17,0,0)
	if scissorUses <= 0 then
		spr(259, scissorX, scissorY, 0, 1, 0, 0, 2, 2)
	end
	spr(257, plr.x, plr.y, 0, 1, plr.moveDir == -1 and 1 or 0, 0, 2, 2)
	for _,wd in ipairs(weeds) do
		if wd.state > 0 then
			if wd.state == 4 and failAnimTimer == 0 then
				spr(weedSprs[wd.state-(t//15)%2], wd.x, wd.y, 0, 1, 0, 0, 3, 3)
			else
				spr(weedSprs[wd.state], wd.x, wd.y, 0, 1, 0, 0, 3, 3)
			end
		end
	end
	if plr.cuttingWeed then
		spr(289+(t//(8/gameSpeed))%3, plr.cuttingWeed.x+8, plr.cuttingWeed.y-4, 0)
	end

	if failAnimTimer > 2 and (t//3)%2 > 0 then
		spr(337, failWeed.x, failWeed.y, 0, 1, 0, 0, 2, 2)
	elseif failAnimTimer > 1 and failAnimTimer <= 2 then
		spr(337, failWeed.x, lerp(failWeed.y, 4*24, 2-failAnimTimer), 0, 1, 0, 0, 2, 2)
	elseif failAnimTimer > 0 and failAnimTimer <= 1 then
		spr(339, failWeed.x, 4*24, 0, 1, 0, 0, 2, 2)
	end

	-- HUD
	if scissorUses > 0 and (scissorUses > scissorUsesLow or (t//15)%2 > 0) then
		spr(259, 216, 4, 0, 1, 0, 0, 2, 2)
	end
	spr(305, 150, 4, 0, 1, 0, 0, 2, 2)
	print(score, 4, 4, 12, false, 2)
	print("x"..lives, 170, 4, 12, false, 2)
end

-- <TILES>
-- 001:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-- 002:aaa1111aaaa1111aaaa1111aaaa1111aaaa11111aaa11111aaa11111aaa11111
-- 003:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11111111111111111111111111111111
-- 004:aa1111aaaa1111aaaa1111aaaa1111aa111111aa111111aa111111aa111111aa
-- 005:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-- 006:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa55aaaaa5555aaa333333aa333333aa
-- 007:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-- 018:aaa1111aaaa1111aaaa1111aaaa1111aaaa1111aaaa1111aaaa1111aaaa11111
-- 019:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa11111111
-- 020:aa1111aaaa1111aaaa1111aaaa1111aaaa1111aaaa1111aaaa1111aa111111aa
-- 021:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-- 022:a3333aaaa3333aaaa3333aaaaa333aaaaa333aaaaa33aaaaaa33aaaaaa33aaaa
-- 023:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-- 034:aaa11111aaa11111aaa11111aaa1111aaaa1111aaaa1111aaaa1111aaaa1111a
-- 035:111111111111111111111111aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-- 036:111111aa111111aa111111aaaa1111aaaa1111aaaa1111aaaa1111aaaa1111aa
-- 037:222222222222222222222222aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-- 038:222222222222222222222222aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-- 039:222222222222222222222222aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
-- </TILES>

-- <SPRITES>
-- 001:0000000000000000000000000000000000000000000000cc0ccc0ccccccccccc
-- 002:000cc00000ccc0000cccc0000ccc20000ccc2c00ccccccc0cccccccccccccccc
-- 003:0dd0000d00d0000d00ddd00d0000dddd00000dcc000000cc00000dd00000dd00
-- 004:d000000000000000000000000000000000000000dd000000ddd000000ddd0000
-- 010:0000000000000000000000000000000000000000060000000660000006000000
-- 012:0000000000000000000000000000070000000600000006000077600070067000
-- 013:0000000000000000000000000000000000006000060077000660760006076000
-- 017:cccccccc0ccccccc000ccccc000ccccc000ccccc000ccccc00cccc0000ccc000
-- 018:cccc0000ccc00000ccc00000ccc00000cccc0000cccc0000ccccc000ccccc000
-- 019:0000d0000000d000000eeee0000e00e0000e00e0000e0ee0000eee0000000000
-- 020:000de000000eeee0000e00e0000e00e0000e00e00000ee000000000000000000
-- 022:0000000000000000000000000007000070070077770707707777070000777700
-- 025:0000077070007707700006076607660776060077760707707777070000777700
-- 026:7700000070000000000000000000000000000000000000000000000000000000
-- 027:0000007000000070000000070000000000000007000000000000000000000000
-- 028:7006677077777707777006076607660776060077760707767777077700777777
-- 029:7776000070000000000000000700000067000000700000007000000000000000
-- 033:0000000000000000000000000500005000000000005050000000000000000000
-- 034:0005000000000050050000000000000500500000000000000000000000000000
-- 049:0000220002222220022222222222222222222222222222220222222202222222
-- 050:0002200000222222022222220222222222222222222222222222222222222222
-- 051:0000000000000000000000002000000020000000200000000000000000000000
-- 053:0000000000000000000000070070000700700077007070070070700700707000
-- 054:0000000000700070007000700070077600700706000076067077600670067060
-- 055:0000000000600000606070000060700000606700066077000660760006076000
-- 065:0222222200222222000222220000222200000222000000220000002200000002
-- 066:2222222222222220222222002222200022220000222000002220000022000000
-- 069:0007077600077776000000760000007000000077000000700000000700000007
-- 070:7006666077777707677006076607660776060077766707767766077677767776
-- 071:7676000076600000066000000670000077000000760000006000000000000000
-- 082:0000000000000000000000000000000000550000055550003333330033333300
-- 098:0333300003333000033330000033300000333000003300000033000000330000
-- 099:0000000000000000000000000000000000000000000000010000001300000111
-- 100:0000000000000000000000000001000000335000333553003335113011331530
-- </SPRITES>

-- <MAP>
-- 000:101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 001:101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 002:101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 003:101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 004:101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 005:101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 006:101010101010101010101010203040506070506070506070203040101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 007:101010101010101010101010213141516171516171516171213141101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 008:101010101010101010101010223242526272526272526272223242101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 009:101010101010101010101010203040506070506070506070203040101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 010:101010101010101010101010213141516171516171516171213141101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 011:101010101010101010101010223242526272526272526272223242101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 012:101010101010101010101010203040101010101010101010203040101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 013:101010101010101010101010213141101010101010101010213141101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 014:101010101010101010101010223242101010101010101010223242101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 015:101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 016:101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </MAP>

-- <WAVES>
-- 000:00000000ffffffff00000000ffffffff
-- 001:0123456789abcdeffedcba9876543210
-- 002:0123456789abcdef0123456789abcdef
-- </WAVES>

-- <SFX>
-- 000:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000304000000000
-- </SFX>

-- <TRACKS>
-- 000:100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </TRACKS>

-- <PALETTE>
-- 000:1a1c2c5d275db13e53ef7d57ffcd75a7f07038b76425717929366f3b5dc941a6f673eff7f4f4f494b0c2566c86333c57
-- </PALETTE>

